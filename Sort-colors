class Solution {
    public void sortColors(int[] nums) {
        int left = 0;
        int right = nums.length-1;
        int curr = 0;
        while(curr <= right) {
            if(nums[curr] == 0) {
                nums[curr] = nums[left];
                nums[left++] = 0; 
                curr++;  
            }
            else if(nums[curr] == 2) {
                nums[curr] = nums[right];
                nums[right--] = 2;
                
            } else curr++;
        }
    }
}
// when nums[curr] == 2 , we are not incrementing curr because the swapped element may be 0 which must be accounted for.
// when nums[curr] == 0 , we are incrementing curr because the swapped element can never be 2, because if it was 2 it would had been swapped with right pointer.
